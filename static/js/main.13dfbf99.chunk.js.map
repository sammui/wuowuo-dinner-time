{"version":3,"sources":["CoverEditorComponent.js","App.js","serviceWorker.js","index.js"],"names":["imgPath","process","defaultSliderValue","getImgSize","element","width","$","height","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onUpload","e","file","document","querySelector","files","resizeReader","FileReader","setState","sliderValue","type","readAsDataURL","onloadend","image","Image","src","result","onload","imageEvent","canvas","createElement","callback","reader","view","DataView","target","getUint16","length","byteLength","offset","marker","getUint32","little","tags","i","readAsArrayBuffer","getOrientation","orientation","oriWidth","oriHeight","degrees","console","log","newSize","w","h","rotation","rads","Math","PI","c","cos","s","sin","newCanvasSize","ctx","getContext","clearRect","save","translate","rotate","drawImage","restore","imgDataUrl","toDataURL","getElementById","setAttribute","onImgLoad","draggablePostion","x","y","userImgSize","onModalImgLoad","modalDraggablePostion","modalUserImgSize","onResize","number","state","css","onModalResize","onStart","activeDrags","onStop","download","coverImg","userImg","coverImage","attr","userImage","resize_canvas","rect","fillStyle","fill","left","top","base64","link","href","body","appendChild","click","onTouchMove","preventDefault","Modal","setAppElement","addEventListener","removeEventListener","dragHandlers","_this$state","react_default","a","className","id","onChange","draggable","concat","alt","react_draggable_default","assign","bounds","handle","position","onLoad","es","min","max","defaultValue","value","rel","onClick","Component","hidden","src_CoverEditorComponent","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.13dfbf99.chunk.js","sourcesContent":["import React, { Component }     from 'react';\nimport Draggable                from 'react-draggable';\nimport $                        from 'jquery';\nimport Slider                   from 'rc-slider';\nimport Modal                    from 'react-modal';\n\nimport 'rc-slider/assets/index.css';\nimport './CoverEditorComponent.css';\n\nconst imgPath = process.env.PUBLIC_URL + '/images/';\nconst defaultSliderValue = 50\n\nfunction newCanvasSize(w, h, rotation) {\n    let rads = rotation * Math.PI / 180;\n    let c = Math.cos(rads);\n    let s = Math.sin(rads);\n    if (s < 0) {\n        s = -s;\n    }\n    if (c < 0) {\n        c = -c;\n    }\n    return [h * s + w * c,h * c + w * s];\n}\n\nfunction getOrientation(file, callback) {\n  let reader = new FileReader();\n  reader.onload = function(e) {\n\n    let view = new DataView(e.target.result);\n    if (view.getUint16(0, false) !== 0xFFD8) return callback(-2);\n    let length = view.byteLength, offset = 2;\n    while (offset < length) {\n      let marker = view.getUint16(offset, false);\n      offset += 2;\n      if (marker === 0xFFE1) {\n        if (view.getUint32(offset += 2, false) !== 0x45786966) return callback(-1);\n        let little = view.getUint16(offset += 6, false) === 0x4949;\n        offset += view.getUint32(offset + 4, little);\n        let tags = view.getUint16(offset, little);\n        offset += 2;\n        for (let i = 0; i < tags; i++)\n          if (view.getUint16(offset + (i * 12), little) === 0x0112)\n            return callback(view.getUint16(offset + (i * 12) + 8, little));\n      }\n      else if ((marker & 0xFF00) !== 0xFF00) break;\n      else offset += view.getUint16(offset, false);\n    }\n    return callback(-1);\n  };\n  reader.readAsArrayBuffer(file);\n}\n\nfunction getImgSize(element) {\n  return {\n    width: $(element).width(),\n    height: $(element).height(),\n  }\n}\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      activeDrags: 0,\n      sliderValue: defaultSliderValue,\n      draggablePostion: {\n        x: 0, y: 100\n      },\n      userImgSize: {\n        w: 0, h: 0\n      },\n      modalDraggablePostion: {\n        x: 0, y: 100\n      },\n      modalUserImgSize: {\n        w: 0, h: 0\n      },\n    }\n  }\n\n  onUpload = (e) => {\n    let file          = document.querySelector('input[type=file]').files[0];\n    let resizeReader  = new FileReader();\n\n    this.setState({ sliderValue: defaultSliderValue })\n\n    if (!file) {\n      return\n    } else if (!(file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif')) {\n      // alert\n    } else {\n      resizeReader.readAsDataURL(file);\n    }\n\n    resizeReader.onloadend = function () {\n        let image = new Image();\n\n        image.src = resizeReader.result;\n        image.onload = function (imageEvent) {\n\n            /* Resize */\n            let canvas = document.createElement('canvas'),\n                max_size = 1024,\n                width = image.width,\n                height = image.height;\n            if (width > height) {\n                if (width > max_size) {\n                    height *= max_size / width;\n                    width = max_size;\n                }\n            } else {\n                if (height > max_size) {\n                    width *= max_size / height;\n                    height = max_size;\n                }\n            }\n\n            /* set new orientation */\n            getOrientation(file, (orientation) => {\n\n              let oriWidth = width\n              let oriHeight = height\n              let degrees = 0;\n              if (orientation === 6) {\n                console.log('rotate 90degree');\n                degrees = 90;\n              } else if (orientation === 3) {\n                console.log('rotate 180degree');\n                degrees = 180;\n              } else if (orientation === 8) {\n                console.log('rotate 180degree');\n                degrees = 270;\n              }\n              let newSize = newCanvasSize(oriWidth, oriHeight, degrees);\n              canvas.width = newSize[0];\n              canvas.height = newSize[1];\n              let ctx = canvas.getContext(\"2d\");\n              ctx.clearRect(0, 0, canvas.width, canvas.height);\n              ctx.save();\n              ctx.translate(canvas.width/2, canvas.height/2);\n              ctx.rotate(degrees*Math.PI/180);\n              ctx.drawImage(image, -oriWidth/2, -oriHeight/2, oriWidth, oriHeight);\n              ctx.restore();\n\n              /* Update img src with data url */\n              let imgDataUrl = canvas.toDataURL('image/jpeg');\n              document.getElementById('user-img').setAttribute('src', imgDataUrl);\n              //document.getElementById('user-img-modal').setAttribute('src', imgDataUrl);\n\n\n            })\n        }\n     }\n  }\n\n  onImgLoad = (e) => {\n    this.setState({\n      draggablePostion:\n        {\n          x: (getImgSize('.drag-area').width - getImgSize('.user-img').width)/2.0,\n          y: (getImgSize('.drag-area').height - getImgSize('.user-img').height)/2.0 + 20\n        },\n      userImgSize:\n        {\n          w: getImgSize('.user-img').width,\n          h: getImgSize('.user-img').height\n        }\n    })\n  }\n\n  onModalImgLoad = (e) => {\n    this.setState({\n      modalDraggablePostion:\n        {\n          x: (getImgSize('.drag-area-modal').width - getImgSize('.user-img-modal').width)/2.0,\n          y: (getImgSize('.drag-area-modal').height - getImgSize('.user-img-modal').height)/2.0 + 20\n        },\n      modalUserImgSize:\n        {\n          w: getImgSize('.user-img-modal').width,\n          h: getImgSize('.user-img-modal').height\n        }\n    })\n  }\n\n  onResize = (number) => {\n    const { userImgSize } = this.state\n\n    $('.user-img').css( \"maxWidth\", userImgSize.w + userImgSize.w*(number - 50)/100.0 + \"px\" )\n    $('.user-img').css( \"maxHeight\", userImgSize.h + userImgSize.h*(number - 50)/100.0 + \"px\" )\n\n    this.setState({ sliderValue: number })\n  }\n\n  onModalResize = (number) => {\n    const { modalUserImgSize } = this.state\n\n    $('.user-img-modal').css( \"maxWidth\", modalUserImgSize.w + modalUserImgSize.w*(number - 50)/100.0 + \"px\" )\n    $('.user-img-modal').css( \"maxHeight\", modalUserImgSize.h + modalUserImgSize.h*(number - 50)/100.0 + \"px\" )\n  }\n\n  onStart = () => {\n    const { activeDrags } = this.state\n    this.setState({\n      activeDrags: activeDrags + 1,\n      draggablePostion: null,\n      modalDraggablePostion: null,\n    });\n\n  }\n\n  onStop = () => {\n    const { activeDrags } = this.state\n    this.setState({activeDrags: activeDrags - 1});\n  }\n\n  download = () => {\n    let scale = 3\n\n    let coverImg = $('.cover-img')\n    let userImg  = $('.user-img')\n\n    let coverImage = new Image();\n    coverImage.src = coverImg.attr('src');\n\n    let userImage = new Image();\n    userImage.src = userImg.attr('src');\n\n    let resize_canvas = document.getElementById(\"result\");\n    resize_canvas.width = coverImg.width()*scale;\n    resize_canvas.height = coverImg.height()*scale;\n\n    let ctx = resize_canvas.getContext(\"2d\");\n    ctx.rect(0, 0, coverImg.width()*scale, coverImg.height()*scale);\n    ctx.fillStyle = \"#CCCCCC\";\n    ctx.fill();\n    ctx.drawImage(userImage, userImg.offset().left*scale - coverImg.offset().left*scale, userImg.offset().top*scale - coverImg.offset().top*scale, userImg.width()*scale, userImg.height()*scale);\n    ctx.drawImage(coverImage, 0, 0, coverImg.width()*scale, coverImg.height()*scale);\n\n    const base64 = resize_canvas.toDataURL(\"image/png\");\n    const link = document.createElement('a');\n    link.href = base64\n    link.setAttribute('download', 'wuo.png');\n\n    console.log('download:',base64)\n\n    document.body.appendChild(link);\n    link.click();\n\n    //let u = base64;\n    //let t='img'\n    //window.open('http://www.facebook.com/sharer.php?u='+encodeURIComponent(u)+'&t='+encodeURIComponent(t),'sharer','toolbar=0,status=0,width=626,height=436');\n  }\n\n  componentDidMount() {\n    Modal.setAppElement('body');\n\n    let drag = document.getElementById('drag-area');\n\n    drag.addEventListener(\"touchmove\", this.onTouchMove, false);\n  }\n\n  componentWillUnmount(){\n    let drag = document.getElementById('drag-area');\n\n    drag.removeEventListener(\"touchmove\", this.onTouchMove, false);\n  }\n\n  onTouchMove = (e) => {\n    e.preventDefault()\n  }\n\n  render() {\n    const dragHandlers = {onStart: this.onStart, onStop: this.onStop};\n    const { draggablePostion, sliderValue } = this.state\n\n    return (\n      <div className=\"cover-editor\">\n        <div className=\"upload\">\n          <label>\n            <div className=\"upload-button\">上傳照片</div>\n            <input type=\"file\" id=\"getval\" onChange={this.onUpload}/>\n          </label>\n        </div>\n        <div className=\"cover-box\">\n          <img\n              className=\"cover-img\"\n              draggable=\"true\"\n              src={`${imgPath}object/1.png`}\n              alt={'img'}/>\n          <div className=\"drag-area\" id=\"drag-area\">\n            <Draggable\n              bounds=\"parent\"\n              handle=\".user-img\"\n              position={draggablePostion}\n              {...dragHandlers} >\n              <div className=\"user-img-wrapper\">\n                <img\n                  id=\"user-img\"\n                  className=\"user-img\"\n                  draggable=\"false\"\n                  src={`${imgPath}wuo_sample.png`}\n                  alt={'img'}\n                  onLoad={this.onImgLoad}\n                  /*onClick={this.openModal}*//>\n              </div>\n            </Draggable>\n          </div>\n        </div>\n        <div className=\"slider\">\n          <Slider min={0} max={100} defaultValue={defaultSliderValue} value={sliderValue} onChange={this.onResize}/>\n          <div className=\"slider-minus\">-</div>\n          <div className=\"slider-plus\">+</div>\n        </div>\n        <div className=\"actions\">\n          <div className=\"visit\">\n            <a\n              target='_blank'\n              rel='noopener noreferrer'\n              href={'https://wuo-wuo.com/nest-holding-newspaper/each-period-of-nest-reported/800-wo-bao-bao-vol-14-quot-cat-is-hungry-quot-cat-diet-special-issue.html'} className=\"visit-button\"> </a>\n          </div>\n          <div className=\"download\">\n            <div className=\"download-button\" onClick={this.download}></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport CoverEditorComponent from './CoverEditorComponent'\nimport './App.css';\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className=\"app\">\n        <canvas id=\"result\" className=\"hide\"></canvas>\n        <div hidden className=\"app-logo\"></div>\n        <div className=\"app-title\">\n          <img src=\"images/complete-title.png\" alt=\"\" className=\"app-main-title\"/>\n        </div>\n        <CoverEditorComponent/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}